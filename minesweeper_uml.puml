@startuml Minesweeper Game

' Style settings
skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}

' Main classes
class Main {
    +main(String[] args): void
}

class Game {
    -playing: boolean
    -board: Board
    -gui: UI
    -score: Score
    +dbPath: String
    +Game()
    +mouseClicked(MouseEvent e): void
    +mousePressed(MouseEvent e): void
    +mouseReleased(MouseEvent e): void
    +mouseEntered(MouseEvent e): void
    +mouseExited(MouseEvent e): void
    +actionPerformed(ActionEvent e): void
    +windowClosing(WindowEvent e): void
    +windowOpened(WindowEvent e): void
    +windowIconified(WindowEvent e): void
    +windowDeiconified(WindowEvent e): void
    +windowClosed(WindowEvent e): void
    +windowActivated(WindowEvent e): void
    +windowDeactivated(WindowEvent e): void
}

class Board {
    -cells: Cell[][]
    -rows: int
    -cols: int
    -mines: int
    -gameOver: boolean
    +Board(int rows, int cols, int mines)
    +placeMines(): void
    +calculateNumbers(): void
    +revealCell(int row, int col): void
    +flagCell(int row, int col): void
    +checkWin(): boolean
    +loadSaveGame(): Pair
}

class Cell {
    -isMine: boolean
    -isRevealed: boolean
    -isFlagged: boolean
    -number: int
    +Cell()
    +setMine(boolean isMine): void
    +setRevealed(boolean isRevealed): void
    +setFlagged(boolean isFlagged): void
    +setNumber(int number): void
}

class UI {
    -game: Game
    -board: Board
    -score: Score
    -timer: Timer
    -time: int
    +UI(Game game)
    +updateBoard(): void
    +updateScore(): void
    +updateTimer(): void
    +showGameOver(): void
    +showWin(): void
}

class Score {
    -bestTimes: ArrayList<Time>
    -gamesPlayed: int
    -gamesWon: int
    -longestWinningStreak: int
    -longestLosingStreak: int
    -currentStreak: int
    +Score()
    +populate(): boolean
    +save(): void
    +updateStats(boolean won): void
}

class Time {
    -time: int
    -date: Date
    +Time(int time, Date date)
    +getTime(): int
    +getDate(): Date
}

' Relationships
Main --> Game : creates
Game --> Board : manages
Game --> UI : manages
Game --> Score : manages
Board --> Cell : contains
UI --> Board : displays
UI --> Score : displays
Score --> Time : contains

' Interfaces
interface MouseListener
interface ActionListener
interface WindowListener

Game ..|> MouseListener
Game ..|> ActionListener
Game ..|> WindowListener

@enduml 